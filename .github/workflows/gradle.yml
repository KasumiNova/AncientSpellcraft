name: Build and Test Mod

on:
  push:
    branches:
      - '[0-9]**'
    paths-ignore:
      - '*.md'
      - '.github/**'
      - '.forge/**'
      - LICENSE
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
  
jobs:
  build:
    name: Build Mod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Load Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Build
        run: chmod 777 gradlew

      - name: Determine Version with GitVersion
        id: gitversion
        run: |
          if [ "$GITHUB_ACTIONS" == "true" ]; then
            wget -q -O GitVersion.Linux.tar.gz https://github.com/GitTools/GitVersion/releases/download/5.12.0/gitversion-linux-x64-5.12.0.tar.gz
            tar -xvzf GitVersion.Linux.tar.gz
            chmod +x gitversion
            export VERSION=$(./gitversion | jq -r '.Patch += 1 | "\(.Major).\(.Minor).\(.Patch)-PreRelease-\(.ShortSha)"')
            echo "PROJECT_VERSION: $VERSION"
            echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
          fi

      - name: Run tests
        id: tests
        env:
          USE_ALPHAS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ env.GITHUB_USER }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
        run: ./gradlew test

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/macos@v2
        if: always()
        with:
          files: |
            ${{ github.workspace }}/build/test-results/**/*.xml

      - name: Build
        id: build
        env:
          USE_ALPHAS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ env.GITHUB_USER }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
        run: ./gradlew setupGithubActions build publish --max-workers=1

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: mod
          path: build/libs/*.jar

  test:
    name: Minecraft Smoke Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: mod
          path: build/libs

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: '8'

      - name: Download Minecraft Server
        run: |
          wget -O server.jar https://files.minecraftforge.net/maven/net/minecraftforge/forge/1.12.2-14.23.5.2855/forge-1.12.2-14.23.5.2855-installer.jar
          java -jar server.jar --installServer

      - name: Add mod to mods folder
        run: |
          mkdir -p run/mods
          cp build/libs/*.jar run/mods/

      - name: Accept EULA
        run: echo "eula=true" > eula.txt

      - name: Start Minecraft server
        run: |
          cd run
          java -Xmx1024M -Xms1024M -jar forge-1.12.2-14.23.5.2855-universal.jar nogui &
          sleep 60
          SERVER_PID=$!
          if ps -p $SERVER_PID > /dev/null
          then
            echo "Minecraft server is running"
            kill $SERVER_PID
          else
            echo "Minecraft server failed to start"
            exit 1
          fi
