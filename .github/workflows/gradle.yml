name: 'Build Mod'
on:
  push:
    branches:
      - '[0-9]**'
    paths-ignore:
      - '*.md'
      - '.github/**'
      - '.forge/**'
      - LICENSE
    tags-ignore:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
  
jobs:
  build:
    name: Build 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with: {java-version: 1.8}

      - name: Load Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Build
        run: 'chmod 777 gradlew'

      - name: Determine Version with GitVersion
        id: gitversion
        run: |
          if [ "$GITHUB_ACTIONS" == "true" ]; then
            wget -q -O GitVersion.Linux.tar.gz https://github.com/GitTools/GitVersion/releases/download/5.12.0/gitversion-linux-x64-5.12.0.tar.gz
            tar -xvzf GitVersion.Linux.tar.gz
            chmod +x gitversion
            export VERSION=$(./gitversion | jq -r '.Patch += 1 | "\(.Major).\(.Minor).\(.Patch)-PreRelease-\(.ShortSha)"')
            echo "PROJECT_VERSION: $VERSION"
            echo "PROJECT_VERSION=$VERSION" >> $GITHUB_ENV
          fi

      - name: Build with Gradle
        id: build
        env: 
          USE_ALPHAS: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USER: ${{ env.GITHUB_USER }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
        run: './gradlew setupGithubActions build publish --max-workers=1'
